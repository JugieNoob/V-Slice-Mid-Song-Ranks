import funkin.modding.module.Module;
import funkin.ui.options.OptionsState;
import flixel.FlxG;
import Std;
import flixel.FlxSprite;
import flixel.text.FlxText;
import funkin.ui.options.PreferencesMenu;
import flixel.util.FlxTimer;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;



class RankModOptions extends Module {

    var pagename = OptionsState.PageName;
    var rank:RankSprite;
    var currentState;

    var text:FlxText;

    var items;
    var itemID:Int;
       

    var playingAnimation:Bool = false;
    var timer:FlxTimer;


    function new (){
        super("Rank Mod Options", 100);

        if (FlxG.save.data.showrank == null)
        {
            FlxG.save.data.showrank = true;
        }
        if (FlxG.save.data.backgroundAlpha == null)
        {
            FlxG.save.data.backgroundAlpha = 50;
        }


        if (FlxG.save.data.rankPos == null)
        {
            FlxG.save.data.rankPos == "Top Right";
        }

        if (FlxG.save.data.rankAnimation == null)
        {
            FlxG.save.data.rankAnimation = "Bump";
        }
    }


    function onStateChangeEnd(event)
    {
        super.onStateChangeEnd(event);


            if (Std.isOfType(event.targetState, OptionsState))
                {
                        currentState = event.targetState;
                        var preferences = event.targetState.optionsCodex.pages.get("preferences");


                        text = new FlxText();
                        OptionsState.instance.add(text);

                        rank = new RankSprite();
                        rank.visible = false;
                        rank.camera = preferences.menuCamera;
                        OptionsState.instance.add(rank);

                        timer = new FlxTimer();

        
                        preferences.createPrefItemCheckbox('Show Mid Song Ranks', 'Toggles the mid-song Ranks.', function(value:Bool):Void {
                            FlxG.save.data.showrank = value; }, FlxG.save.data.showrank);

                        preferences.createPrefItemEnum('Rank Icon Animation', 'Set which animation should play when a rank changes', ["None" => "None", "Bump" => "Bump", "Shake" => "Shake", "Jump" => "Jump", "Tilt" => "Tilt",],function(value:Bool):Void {
                            FlxG.save.data.rankAnimation = value;
                        }, FlxG.save.data.rankAnimation);      
                        
                        items = preferences.items;
                        rank.setPosition((FlxG.width - rank.width) - 50, 120 * (items.length - 1) + 30);
                        itemID = items.length - 1;
                  

                        preferences.createPrefItemPercentage('Rank Background Opacity', "Change the opacity of the Rank Background", function(value:Int){
                            FlxG.save.data.backgroundAlpha = value;
                        }, FlxG.save.data.backgroundAlpha);

                            
                        preferences.createPrefItemEnum('Mid Song Rank Pos', 'Set the position of the Mid-Song Rank. (Default is top-right)', ["Top Right" => "Top Right", "Top Left" => "Top Left", "Bottom Right" => "Bottom Right", "Bottom Left" => "Bottom Left"],function(value:Bool):Void {
                            FlxG.save.data.rankPos = value;
                        }, FlxG.save.data.rankPos);      
            

                
                }
            else
            {
                currentState = null;
            }
        
      
    }

    override function onUpdate(event)
    {
        super.onUpdate(event);
        if (Std.isOfType(currentState, OptionsState))
        {
            // if (text != null)
            // {
            //     text.text = Std.isOfType(currentState.optionsCodex.currentPage, PreferencesMenu);
            // }
            if (Std.isOfType(currentState.optionsCodex.currentPage, PreferencesMenu) && !rank.visible)
            {
                rank.visible = true;
            } 
            else if (!Std.isOfType(currentState.optionsCodex.currentPage, PreferencesMenu) && rank.visible)
            {
                rank.visible = false;
            }

            if (items.selectedIndex == itemID)
            {
             
                if (!playingAnimation)
                {
                    playingAnimation = true;
                    rank.playRankAnimation();
                }
                else if (playingAnimation && !timer.active)
                {
                    timer.start(1, function(){
                        playingAnimation = false;    
                    });
                        
                }

                text.text = "selected " + playingAnimation;

            }
            
        }
     
    }

}
