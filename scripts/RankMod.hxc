import funkin.play.PlayState;
import funkin.modding.module.Module;
import funkin.graphics.FunkinSprite;
import flixel.FlxG;
import funkin.Highscore;
import flixel.text.FlxText;
import funkin.util.Constants;
import flixel.FlxSprite;
import flixel.tweens.FlxTween;

class RankMod extends Module {

    var rank:FunkinSprite;
    var background:FlxSprite;

    var totalNotes:Int = 0;
    var padding:Int = 10;
    var previousRank:String = "";

    
    function new (){
        super("Rank Mod");
    }


    override function onNoteHit(event)
    {
        super.onNoteHit(event);
        if (!FlxG.save.data.showrank) return;

        if (PlayState.instance != null)
            {
                if (event.note.noteData.getMustHitNote())
                {
                    totalNotes++;
                    updateRankIcon();
                }
        
            }

    }

    override function onNoteMiss(event)
    {
        super.onNoteMiss(event);
        if (!FlxG.save.data.showrank) return;
        totalNotes++;
        updateRankIcon();
    }

    override function onCountdownStart(event)
    {
        super.onCountdownStart(event);
        if (!FlxG.save.data.showrank) return;
        

        totalNotes = 0;
        rank = new FunkinSprite(400, 200);
        rank.loadSparrow("rankbadges");

        rank.animation.addByPrefix("PERFECTGOLD", "PERFECT rank GOLD0005", 24, false);
        rank.animation.addByPrefix("PERFECT", "PERFECT rank0005", 24, false);
        rank.animation.addByPrefix("EXCELLENT", "EXCELLENT rank0005", 24, false);
        rank.animation.addByPrefix("GREAT", "GREAT rank0005", 24, false);
        rank.animation.addByPrefix("GOOD", "GOOD rank0005", 24, false);
        rank.animation.addByPrefix("SHIT", "LOSS rank0005", 24, false);
        rank.camera = PlayState.instance.camHUD;
        rank.animation.play(getRank(), true, false);
        rank.updateHitbox();


        previousRank = getRank();


        background = new FlxSprite();
        background.makeGraphic(rank.width + padding, rank.height + padding, 0xFF000000);
        background.alpha = FlxG.save.data.backgroundAlpha / 100;
        background.camera = PlayState.instance.camHUD;
        PlayState.instance.add(background);
        
        switch (FlxG.save.data.rankPos)
        {
            case "Top Right":
                background.setPosition(FlxG.width - background.width, 0);
            case "Top Left":
                background.setPosition(0, 0);
            case "Bottom Right":
                background.setPosition(FlxG.width - background.width, FlxG.height - background.height);
            case "Bottom Left":
                background.setPosition(0, FlxG.height - background.height);
        }  



    
        updateRankPos();

        PlayState.instance.add(background);
        PlayState.instance.add(rank);
        



    }

    function updateRankIcon()
    {
        rank.animation.play(getRank(), true, false);
        rank.updateHitbox();
        updateRankPos();

        if (previousRank != getRank() && FlxG.save.data.rankbump && FlxG.save.data.showrank)
        {
            FlxTween.tween(rank.scale, {x: 1.25, y: 1.25}, 0.05, {
                onComplete: function(){
                    FlxTween.tween(rank.scale, {x: 1, y: 1}, 0.05);
                }
            });
        }

        previousRank = getRank();
    }

    function updateRankPos()
    {
        rank.setPosition(background.x + (background.width / 2) - (rank.width / 2) + (padding / 8), background.y + (background.height / 2) - (rank.height / 2) + (padding / 2));
    }


    function getRank()
    {
        // Adapted from FNF Source Code
        var isPerfectGold = Highscore.tallies.sick == Highscore.tallies.totalNotesHit && Highscore.tallies.missed == 0;
        if (isPerfectGold)
        {
            return "PERFECTGOLD";
        }
        
        // Else, use the standard grades
        
        // Final Grade = (Sick + Good - Miss) / (Total Notes)
        
        var grade = (Highscore.tallies.sick + Highscore.tallies.good - Highscore.tallies.missed) / (totalNotes - 1);
        
        if (grade == Constants.RANK_PERFECT_THRESHOLD)
        {
            return "PERFECT";
        }
        else if (grade >= Constants.RANK_EXCELLENT_THRESHOLD)
        {
            return "EXCELLENT";
        }
        else if (grade >= Constants.RANK_GREAT_THRESHOLD)
        {
            return "GREAT";
        }
        else if (grade >= Constants.RANK_GOOD_THRESHOLD)
        {
            return "GOOD";
        }
        else
        {
            return "SHIT";
        }
    }

}
